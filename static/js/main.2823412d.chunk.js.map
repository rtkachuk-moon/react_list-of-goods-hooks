{"version":3,"sources":["types/Good.ts","components/SortBar/SortBar.tsx","components/GoodInfo/GoodsInfo.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","SortBar","isSortedBy","sortBy","ChangeSortMethods","SetSortByDefault","isReversed","setIsReversed","className","onClick","Alphabet","type","cn","Length","GoodsInfo","good","GoodsList","goods","map","goodsFromServer","App","useState","Default","setSortBy","method","isReversedOrder","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","m","ReactDOM","render","document","getElementById"],"mappings":"6KAEYA,E,6DAAAA,K,oBAAAA,E,gBAAAA,E,YAAAA,M,gCCUCC,EAA2B,SAAC,GAMlC,IALGC,EAKJ,EALJC,OACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEA,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAML,EAAkBJ,EAASU,WAC1CC,KAAK,SACLH,UACEI,IACE,SACA,UACA,CACE,WAAYV,IAAeF,EAASU,WAR5C,iCAgBA,wBACED,QAAS,kBAAML,EAAkBJ,EAASa,SAC1CF,KAAK,SACLH,UACEI,IACE,SACA,aACA,CACE,WAAYV,IAAeF,EAASa,SAR5C,4BAgBA,wBACEJ,QAAS,kBAAMF,GAAeD,IAC9BK,KAAK,SACLH,UAAWI,IACT,SACA,aACA,CACE,YAAaN,IAPnB,sBAcEJ,GAAcI,IACd,wBACEG,QAAS,kBAAMJ,KACfM,KAAK,SACLH,UAAU,4BAHZ,uBC7DKM,EAA6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3C,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,ICDfC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAWA,KAAMA,UCLZI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMC,EAAgB,WAC3B,MAA4BC,mBAASrB,EAASsB,SAA9C,mBAAOnB,EAAP,KAAeoB,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOf,EAAP,KAAmBC,EAAnB,KACMU,EAlCR,SACEA,EACAO,EACAC,GAEA,IAAMC,EAAa,YAAOT,GAE1B,GAAIO,EACF,OAAQA,GACN,KAAMxB,EAASU,SACbgB,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAGF,KAAM7B,EAASa,OACba,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAahE,OAJIN,GACFC,EAAcM,UAGTN,EAMOO,CAAiBd,EAAiBhB,EAAQG,GAWxD,OACE,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CACEL,OAAQA,EACRC,kBAboB,SAAC8B,GACzBX,EAAUW,IAaN7B,iBAVmB,WACvBkB,EAAUvB,EAASsB,SACnBf,GAAc,IASVD,WAAYA,EACZC,cAAeA,IAGjB,6BACE,cAAC,EAAD,CAAWU,MAAOA,UCzE1BkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2823412d.chunk.js","sourcesContent":["export type Good = string;\n\nexport enum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n\nexport interface SortBy {\n  method: SortType,\n  isReversedOrder: boolean,\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { SortType } from '../../types/Good';\n\ntype Props = {\n  sortBy: SortType,\n  ChangeSortMethods: (sortBy: SortType) => void,\n  SetSortByDefault: () => void,\n  isReversed: boolean,\n  setIsReversed: (isReversed: boolean) => void,\n};\n\nexport const SortBar: React.FC<Props> = ({\n  sortBy: isSortedBy,\n  ChangeSortMethods,\n  SetSortByDefault,\n  isReversed,\n  setIsReversed,\n}) => {\n  return (\n    <div className=\"buttons\">\n      <button\n        onClick={() => ChangeSortMethods(SortType.Alphabet)}\n        type=\"button\"\n        className={\n          cn(\n            'button',\n            'is-info',\n            {\n              'is-light': isSortedBy !== SortType.Alphabet,\n            },\n          )\n        }\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        onClick={() => ChangeSortMethods(SortType.Length)}\n        type=\"button\"\n        className={\n          cn(\n            'button',\n            'is-success',\n            {\n              'is-light': isSortedBy !== SortType.Length,\n            },\n          )\n        }\n      >\n        Sort by length\n      </button>\n\n      <button\n        onClick={() => setIsReversed(!isReversed)}\n        type=\"button\"\n        className={cn(\n          'button',\n          'is-warning',\n          {\n            'is-light': !isReversed,\n          },\n        )}\n      >\n        Reverse\n      </button>\n\n      {(isSortedBy || isReversed) && (\n        <button\n          onClick={() => SetSortByDefault()}\n          type=\"button\"\n          className=\"button is-danger is-light\"\n        >\n          Reset\n        </button>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  good: Good,\n};\n\nexport const GoodsInfo: React.FC<Props> = ({ good }) => {\n  return (\n    <li data-cy=\"Good\" key={good}>{good}</li>\n  );\n};\n","import React from 'react';\nimport { GoodsInfo } from '../GoodInfo';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <GoodsInfo good={good} />\n      ))}\n    </ul>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport { SortType } from './types/Good';\nimport { SortBar } from './components/SortBar';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods: string[],\n  method: SortType,\n  isReversedOrder: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (method) {\n    switch (method) {\n      case (SortType.Alphabet): {\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n      }\n\n      case (SortType.Length): {\n        preparedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  if (isReversedOrder) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.Default);\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  const ChangeSortMethods = (m:SortType) => {\n    setSortBy(m);\n  };\n\n  const SetSortByDefault = () => {\n    setSortBy(SortType.Default);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <SortBar\n        sortBy={sortBy}\n        ChangeSortMethods={ChangeSortMethods}\n        SetSortByDefault={SetSortByDefault}\n        isReversed={isReversed}\n        setIsReversed={setIsReversed}\n      />\n\n      <ul>\n        <GoodsList goods={goods} />\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}