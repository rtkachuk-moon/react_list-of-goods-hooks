{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","sortByDefault","method","Default","isReversedOrder","App","useState","sortBy","setSortBy","goods","preparedGoods","Alphabet","sort","good1","good2","localeCompare","Length","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAWL,IAAME,EAAgB,CACpBC,OAAQH,EAASI,QACjBC,iBAAiB,GAiCZ,IAAMC,EAAgB,WAC3B,MAA4BC,mBAASL,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACMC,EAhCR,SACEA,EADF,GAGG,IADCP,EACF,EADEA,OAAQE,EACV,EADUA,gBAEJM,EAAa,YAAOD,GAE1B,GAAIP,EACF,OAAQA,GACN,KAAMH,EAASY,SACbD,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAGF,KAAMf,EAASiB,OACbN,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAahE,OAJIb,GACFM,EAAcQ,UAGTR,EAKOS,CAAiBnB,EAAiBO,GAEhD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAU,2BAAKD,GAAN,IAAcL,OAAQH,EAASY,aACvDW,KAAK,SACLF,UACEG,IACE,SACA,UACA,CACE,WAAYhB,EAAOL,SAAWH,EAASY,WAR/C,iCAgBA,wBACEU,QAAS,kBAAMb,EAAU,2BAAKD,GAAN,IAAcL,OAAQH,EAASiB,WACvDM,KAAK,SACLF,UACEG,IACE,SACA,aACA,CACE,WAAYhB,EAAOL,SAAWH,EAASiB,SAR/C,4BAgBA,wBACEK,QAAS,kBAAMb,EACbD,EAAOH,gBAAP,2BACSG,GADT,IACiBH,iBAAiB,IADlC,2BAESG,GAFT,IAEiBH,iBAAiB,MAEpCkB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,YAAahB,EAAOH,kBAX1B,sBAkBEG,EAAOL,QAAUK,EAAOH,kBACxB,wBACEiB,QAAS,kBAAMb,EAAU,CACvBN,OAAQH,EAASI,QACjBC,iBAAiB,KAEnBkB,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.000d2463.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n\ninterface SortBy {\n  method: SortType,\n  isReversedOrder: boolean,\n}\n\nconst sortByDefault = {\n  method: SortType.Default,\n  isReversedOrder: false,\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { method, isReversedOrder }: SortBy,\n) {\n  const preparedGoods = [...goods];\n\n  if (method) {\n    switch (method) {\n      case (SortType.Alphabet): {\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n      }\n\n      case (SortType.Length): {\n        preparedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  if (isReversedOrder) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(sortByDefault);\n  const goods = getPreparedGoods(goodsFromServer, sortBy);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortBy({ ...sortBy, method: SortType.Alphabet })}\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              {\n                'is-light': sortBy.method !== SortType.Alphabet,\n              },\n            )\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortBy({ ...sortBy, method: SortType.Length })}\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              {\n                'is-light': sortBy.method !== SortType.Length,\n              },\n            )\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setSortBy(\n            sortBy.isReversedOrder\n              ? { ...sortBy, isReversedOrder: false }\n              : { ...sortBy, isReversedOrder: true },\n          )}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': !sortBy.isReversedOrder,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortBy.method || sortBy.isReversedOrder) && (\n          <button\n            onClick={() => setSortBy({\n              method: SortType.Default,\n              isReversedOrder: false,\n            })}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}